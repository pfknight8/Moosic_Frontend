{"ast":null,"code":"var _jsxFileName = \"/Users/emilybyrne/ga_seir/unit3/projects/Moosic_Frontend/client/src/Components/SearchBar.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = _ref => {\n  let {\n    songSearchFilters,\n    setSongSearchFilters,\n    handleSearchSubmit\n  } = _ref;\n\n  //State -- There is no state here! State is changed by these features, but by function brought down to this component!\n  //Functions -- Consider moving handleChange functions up; I liked having them here for organization, with the required state variables & functions passed into this component as props.\n  const handleFormChange = e => {\n    let formItem = e.target.value;\n\n    switch (e.target.id) {\n      case 'title':\n        setSongSearchFilters({ ...songSearchFilters,\n          title: formItem\n        });\n        break;\n      // case 'minRunTime':\n      //   setSongSearchFilters({...songSearchFilters, minRunTime: formItem})\n      //   break\n      // case 'maxRunTime':\n      //   setSongSearchFilters({...songSearchFilters, maxRunTime: formItem})\n      //   break\n\n      case 'artist':\n        setSongSearchFilters({ ...songSearchFilters,\n          artist: formItem\n        });\n        break;\n\n      case 'genre':\n        setSongSearchFilters({ ...songSearchFilters,\n          genre: formItem\n        });\n        break;\n\n      default:\n        alert('Something went egregiously wrong!');\n    }\n  };\n\n  const handleFormReset = () => {\n    setSongSearchFilters({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onReset: handleFormReset,\n    onSubmit: handleSearchSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchfield\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchfield\",\n        id: \"title\",\n        onChange: handleFormChange // placeholder=\"Title\"\n        ,\n        value: songSearchFilters.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchfield\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"artist\",\n        children: \"Artist/Band: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchfield\",\n        id: \"artist\",\n        onChange: handleFormChange,\n        placeholder: \"Artist/Band\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchfield\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Genre: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"searchfield\",\n        id: \"genre\",\n        onChange: handleFormChange,\n        placeholder: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"reset\",\n      value: \"Reset\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchBar;\nexport default SearchBar; // Will need to parse run times as integers (as seconds) before searching the databse. {Will be done elsewhere, but making this note while thinking of it.}\n// How do we make genres be \"less specific?\" The are many, depending on who you ask, so are Indie Rock, Classic Rock, or W/E Rock all going to come up if a user types in 'rock' or '___rock'? It would be hard to make a selector box with 42 genres in it, so will need a flexible user-typed-in search.\n// Will need a submit button with function in order to control axios calls...don't want axios calls to happen on each keystroke.\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["SearchBar","songSearchFilters","setSongSearchFilters","handleSearchSubmit","handleFormChange","e","formItem","target","value","id","title","artist","genre","alert","handleFormReset"],"sources":["/Users/emilybyrne/ga_seir/unit3/projects/Moosic_Frontend/client/src/Components/SearchBar.jsx"],"sourcesContent":["const SearchBar = ({\n  songSearchFilters,\n  setSongSearchFilters,\n  handleSearchSubmit\n}) => {\n  //State -- There is no state here! State is changed by these features, but by function brought down to this component!\n  //Functions -- Consider moving handleChange functions up; I liked having them here for organization, with the required state variables & functions passed into this component as props.\n  const handleFormChange = (e) => {\n    let formItem = e.target.value\n    switch (e.target.id) {\n      case 'title':\n        setSongSearchFilters({ ...songSearchFilters, title: formItem })\n        break\n      // case 'minRunTime':\n      //   setSongSearchFilters({...songSearchFilters, minRunTime: formItem})\n      //   break\n      // case 'maxRunTime':\n      //   setSongSearchFilters({...songSearchFilters, maxRunTime: formItem})\n      //   break\n      case 'artist':\n        setSongSearchFilters({ ...songSearchFilters, artist: formItem })\n        break\n      case 'genre':\n        setSongSearchFilters({ ...songSearchFilters, genre: formItem })\n        break\n      default:\n        alert('Something went egregiously wrong!')\n    }\n  }\n\n  const handleFormReset = () => {\n    setSongSearchFilters({})\n  }\n\n  return (\n    <form onReset={handleFormReset} onSubmit={handleSearchSubmit}>\n      <div className=\"searchfield\">\n        <label htmlFor=\"title\">Title: </label>\n        <input\n          className=\"searchfield\"\n          id=\"title\"\n          onChange={handleFormChange}\n          // placeholder=\"Title\"\n          value={songSearchFilters.title}\n        ></input>\n      </div>\n      {/* <div>\n        <label htmlFor=\"minRunTime\">Min Time (seconds): </label>\n        <input\n          className=\"searchfield\"\n          id=\"minRunTime\"\n          onChange={handleFormChange}\n          placeholder=\"Greater Than, as Seconds\"\n        ></input>\n      </div>\n      <div>\n        <label htmlFor=\"maxRunTime\">Max Time (seonds): </label>\n        <input\n          className=\"searchfield\"\n          id=\"maxRunTime\"\n          onChange={handleFormChange}\n          placeholder=\"Less Than, as Seconds\"\n        ></input>\n      </div> */}\n      <div className=\"searchfield\">\n        <label htmlFor=\"artist\">Artist/Band: </label>\n        <input\n          className=\"searchfield\"\n          id=\"artist\"\n          onChange={handleFormChange}\n          placeholder=\"Artist/Band\"\n        ></input>\n      </div>\n      <div className=\"searchfield\">\n        <label htmlFor=\"genre\">Genre: </label>\n        <input\n          className=\"searchfield\"\n          id=\"genre\"\n          onChange={handleFormChange}\n          placeholder=\"Genre\"\n        ></input>\n      </div>\n      <button type=\"reset\" value=\"Reset\">\n        Reset\n      </button>\n      <button type=\"submit\">Search</button>\n    </form>\n  )\n}\n\nexport default SearchBar\n\n// Will need to parse run times as integers (as seconds) before searching the databse. {Will be done elsewhere, but making this note while thinking of it.}\n\n// How do we make genres be \"less specific?\" The are many, depending on who you ask, so are Indie Rock, Classic Rock, or W/E Rock all going to come up if a user types in 'rock' or '___rock'? It would be hard to make a selector box with 42 genres in it, so will need a flexible user-typed-in search.\n\n// Will need a submit button with function in order to control axios calls...don't want axios calls to happen on each keystroke.\n"],"mappings":";;;AAAA,MAAMA,SAAS,GAAG,QAIZ;EAAA,IAJa;IACjBC,iBADiB;IAEjBC,oBAFiB;IAGjBC;EAHiB,CAIb;;EACJ;EACA;EACA,MAAMC,gBAAgB,GAAIC,CAAD,IAAO;IAC9B,IAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;;IACA,QAAQH,CAAC,CAACE,MAAF,CAASE,EAAjB;MACE,KAAK,OAAL;QACEP,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;UAAwBS,KAAK,EAAEJ;QAA/B,CAAD,CAApB;QACA;MACF;MACA;MACA;MACA;MACA;MACA;;MACA,KAAK,QAAL;QACEJ,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;UAAwBU,MAAM,EAAEL;QAAhC,CAAD,CAApB;QACA;;MACF,KAAK,OAAL;QACEJ,oBAAoB,CAAC,EAAE,GAAGD,iBAAL;UAAwBW,KAAK,EAAEN;QAA/B,CAAD,CAApB;QACA;;MACF;QACEO,KAAK,CAAC,mCAAD,CAAL;IAjBJ;EAmBD,CArBD;;EAuBA,MAAMC,eAAe,GAAG,MAAM;IAC5BZ,oBAAoB,CAAC,EAAD,CAApB;EACD,CAFD;;EAIA,oBACE;IAAM,OAAO,EAAEY,eAAf;IAAgC,QAAQ,EAAEX,kBAA1C;IAAA,wBACE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,aADZ;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEC,gBAHZ,CAIE;QAJF;QAKE,KAAK,EAAEH,iBAAiB,CAACS;MAL3B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eA6BE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAO,OAAO,EAAC,QAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,aADZ;QAEE,EAAE,EAAC,QAFL;QAGE,QAAQ,EAAEN,gBAHZ;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QA7BF,eAsCE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,SAAS,EAAC,aADZ;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAEA,gBAHZ;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAtCF,eA+CE;MAAQ,IAAI,EAAC,OAAb;MAAqB,KAAK,EAAC,OAA3B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/CF,eAkDE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsDD,CAxFD;;KAAMJ,S;AA0FN,eAAeA,SAAf,C,CAEA;AAEA;AAEA"},"metadata":{},"sourceType":"module"}