{"ast":null,"code":"var _jsxFileName = \"/Users/tommy/ga_seir/projects/Moosic_Frontend/src/Components/SongCard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongCard = _ref => {\n  let {\n    song\n  } = _ref;\n  //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `songCard ${song.genre}Card`,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Will need to display info here. Give appropriate classNames/id's for css formatting.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SongCard;\nexport default SongCard; //The multiple classNames will be useful for formatting. The 'song.genre' template literal will allow us to conditionally format the card, if desired.\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["SongCard","song","genre"],"sources":["/Users/tommy/ga_seir/projects/Moosic_Frontend/src/Components/SongCard.jsx"],"sourcesContent":["const SongCard = ({song}) => {\n  //\n  return (\n    <div className={`songCard ${song.genre}Card`}>\n      <p>Will need to display info here. Give appropriate classNames/id's for css formatting.</p>\n    </div>\n  )\n}\n\nexport default SongCard\n\n//The multiple classNames will be useful for formatting. The 'song.genre' template literal will allow us to conditionally format the card, if desired."],"mappings":";;;AAAA,MAAMA,QAAQ,GAAG,QAAY;EAAA,IAAX;IAACC;EAAD,CAAW;EAC3B;EACA,oBACE;IAAK,SAAS,EAAG,YAAWA,IAAI,CAACC,KAAM,MAAvC;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAPD;;KAAMF,Q;AASN,eAAeA,QAAf,C,CAEA"},"metadata":{},"sourceType":"module"}